knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = TRUE, eval = TRUE,
fig.align = "center", fig.height = 2, fig.width = 5)
trans = function(data){
library(dplyr)
new_data <- data %>% pivot_wider(
names_from = "year",
values_from = "value")
new_data  <- new_data %>% remove_rownames %>%
column_to_rownames(var="region")
}
trans(df_gcapita)
trans = function(data){
library(dplyr)
new_data <- data %>% pivot_wider(
names_from = "year",
values_from = "Value")
new_data  <- new_data %>% remove_rownames %>%
column_to_rownames(var="region")
}
trans(df_gcapita)
trans = function(data){
library(tidyverse)
new_data <- data %>% pivot_wider(
names_from = "year",
values_from = "Value")
new_data  <- new_data %>% remove_rownames %>%
column_to_rownames(var="region")
}
trans(df_gcapita)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = TRUE, eval = TRUE,
fig.align = "center", fig.height = 2, fig.width = 5)
library(readr)
df_gcapita <- read_csv("..//Donnees//annual-growth-in-gni-per-capita.csv")
head(df_gcapita)
df_gender <- read_csv("..//Donnees//gender-inequality-index.csv")
head(df_gender)
df_gpop <- read_csv("..//Donnees//population-growth-annual.csv")
head(df_gpop)
df_gcapita %>% summarise_all(funs(sum(is.na(.))))
df_gender %>% summarise_all(funs(sum(is.na(.))))
df_gpop %>% summarise_all(funs(sum(is.na(.))))
library(forcats)
fct_unique(df1[[1]])
trans = function(data){
library(tidyverse)
new_data <- data %>% pivot_wider(
names_from = "year",
values_from = "Value")
new_data  <- new_data %>% remove_rownames %>%
column_to_rownames(var="region")
}
trans(df_gcapita)
trans = function(data){
library(tidyverse)
new_data <- data %>% pivot_wider(
names_from = "year",
values_from = "Value")
new_data  <- new_data %>% remove_rownames %>%
column_to_rownames(var="region")
}
trans(df_gcapita)
trans = function(data){
library(tidyverse)
new_data <- data %>% pivot_wider(
names_from = "year",
values_from = "Value")
new_data  <- new_data %>% remove_rownames %>%
column_to_rownames(var="region")
}
trans(df_gcapita)
View(df_gcapita)
## Fonction pour renommer les colonnes des bases et selec-
## tionner les colonnes dont nous avons besoin pour les tracés
update = function(data){
library(dplyr)
data = data |> dplyr::rename(region = `Region Name`,
C3region = `Region Alpha-3 Code`,
year = `End Year`)
new_data = data |> dplyr::select(c("region","C3region","year","Value"))
return(new_data)
}
df_gcapita = update(df_gcapita)
update(df_gender)
update(df_gpop)
View(df_gcapita)
## Fonction pour renommer les colonnes des bases et selec-
## tionner les colonnes dont nous avons besoin pour les tracés
update = function(data){
library(dplyr)
data = data |> dplyr::rename(region = `Region Name`,
C3region = `Region Alpha-3 Code`,
year = `End Year`)
new_data = data |> dplyr::select(c("region","C3region","year","Value"))
return(new_data)
}
df_gcapita <- update(df_gcapita)
colourpicker:::colourPickerAddin()
## Fonction pour renommer les colonnes des bases et selec-
## tionner les colonnes dont nous avons besoin pour les tracés
update = function(data){
library(dplyr)
data = data |> dplyr::rename(region = `Region Name`,
C3region = `Region Alpha-3 Code`,
year = `End Year`)
new_data = data |> dplyr::select(c("region","C3region","year","Value"))
return(new_data)
}
df_gcapita <- update(df_gcapita)
## Fonction pour renommer les colonnes des bases et selec-
## tionner les colonnes dont nous avons besoin pour les tracés
update = function(data){
library(dplyr)
data = data |> dplyr::rename(region = `Region Name`,
C3region = `Region Alpha-3 Code`,
year = `End Year`)
new_data = data |> dplyr::select(c("region","C3region","year","Value"))
return(new_data)
}
df_gcapita = update(df_gcapita)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = TRUE, eval = TRUE,
fig.align = "center", fig.height = 2, fig.width = 5)
library(readr)
df_gcapita <- read_csv("..//Donnees//annual-growth-in-gni-per-capita.csv")
head(df_gcapita)
df_gender <- read_csv("..//Donnees//gender-inequality-index.csv")
head(df_gender)
df_gpop <- read_csv("..//Donnees//population-growth-annual.csv")
head(df_gpop)
df_gcapita %>% summarise_all(funs(sum(is.na(.))))
df_gender %>% summarise_all(funs(sum(is.na(.))))
df_gpop %>% summarise_all(funs(sum(is.na(.))))
library(forcats)
fct_unique(df1[[1]])
library(forcats)
fct_unique(df_gcapita[[1]])
## Fonction pour renommer les colonnes des bases et selec-
## tionner les colonnes dont nous avons besoin pour les tracés
update = function(data){
library(dplyr)
data = data |> dplyr::rename(region = `Region Name`,
C3region = `Region Alpha-3 Code`,
year = `End Year`)
new_data = data |> dplyr::select(c("region","C3region","year","Value"))
return(new_data)
}
df_gcapita = update(df_gcapita)
df_gender = update(df_gender)
df_gpop = update(df_gpop)
View(df_gcapita)
View(df_gcapita)
trans = function(data){
library(tidyverse)
new_data <- data %>% pivot_wider(
names_from = "year",
values_from = "Value")
new_data  <- new_data %>% remove_rownames %>%
column_to_rownames(var="region")
}
trans(df_gcapita)
trans = function(data){
library(tidyverse)
new_data <- data %>% pivot_wider(
names_from = "year",
values_from = "Value")
new_data  <- new_data %>% remove_rownames %>%
column_to_rownames(var="region")
return(new_data)
}
df_capita = trans(df_gcapita)
View(df_capita)
## Fonction pour renommer les colonnes des bases et selec-
## tionner les colonnes dont nous avons besoin pour les tracés
update = function(data){
library(dplyr)
data = data |> dplyr::rename(region = `Region Name`,
C3region = `Region Alpha-3 Code`,
year = `End Year`)
data = data[order(data$region,data$Value)]
new_data = data |> dplyr::select(c("region","C3region","year","Value"))
return(new_data)
}
df_gcapita = update(df_gcapita)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = TRUE, eval = TRUE,
fig.align = "center", fig.height = 2, fig.width = 5)
library(readr)
df_gcapita <- read_csv("..//Donnees//annual-growth-in-gni-per-capita.csv")
head(df_gcapita)
df_gender <- read_csv("..//Donnees//gender-inequality-index.csv")
head(df_gender)
df_gpop <- read_csv("..//Donnees//population-growth-annual.csv")
head(df_gpop)
df_gcapita %>% summarise_all(funs(sum(is.na(.))))
df_gender %>% summarise_all(funs(sum(is.na(.))))
df_gpop %>% summarise_all(funs(sum(is.na(.))))
library(forcats)
fct_unique(df_gcapita[[1]])
## Fonction pour renommer les colonnes des bases et selec-
## tionner les colonnes dont nous avons besoin pour les tracés
update = function(data){
library(dplyr)
data = data |> dplyr::rename(region = `Region Name`,
C3region = `Region Alpha-3 Code`,
year = `End Year`)
data = data[order(data$region,data$Value)]
new_data = data |> dplyr::select(c("region","C3region","year","Value"))
return(new_data)
}
df_gcapita = update(df_gcapita)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = TRUE, eval = TRUE,
fig.align = "center", fig.height = 2, fig.width = 5)
library(readr)
df_gcapita <- read_csv("..//Donnees//annual-growth-in-gni-per-capita.csv")
head(df_gcapita)
df_gender <- read_csv("..//Donnees//gender-inequality-index.csv")
head(df_gender)
df_gpop <- read_csv("..//Donnees//population-growth-annual.csv")
head(df_gpop)
df_gcapita %>% summarise_all(funs(sum(is.na(.))))
df_gender %>% summarise_all(funs(sum(is.na(.))))
df_gpop %>% summarise_all(funs(sum(is.na(.))))
library(forcats)
fct_unique(df_gcapita[[1]])
## Fonction pour renommer les colonnes des bases et selec-
## tionner les colonnes dont nous avons besoin pour les tracés
update = function(data){
library(dplyr)
data = data |> dplyr::rename(region = `Region Name`,
C3region = `Region Alpha-3 Code`,
year = `End Year`)
new_data = data |> dplyr::select(c("region","C3region","year","Value"))
df = new_data[order(data$region,data$Value)]
return(df)
}
df_gcapita = update(df_gcapita)
df_gcapita = df_gcapita[order(data$region,data$Value)]
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = TRUE, eval = TRUE,
fig.align = "center", fig.height = 2, fig.width = 5)
library(readr)
df_gcapita <- read_csv("..//Donnees//annual-growth-in-gni-per-capita.csv")
head(df_gcapita)
df_gender <- read_csv("..//Donnees//gender-inequality-index.csv")
head(df_gender)
df_gpop <- read_csv("..//Donnees//population-growth-annual.csv")
head(df_gpop)
df_gcapita %>% summarise_all(funs(sum(is.na(.))))
df_gender %>% summarise_all(funs(sum(is.na(.))))
df_gpop %>% summarise_all(funs(sum(is.na(.))))
library(forcats)
fct_unique(df_gcapita[[1]])
## Fonction pour renommer les colonnes des bases et selec-
## tionner les colonnes dont nous avons besoin pour les tracés
update = function(data){
library(dplyr)
data = data |> dplyr::rename(region = `Region Name`,
C3region = `Region Alpha-3 Code`,
year = `End Year`)
new_data = data |> dplyr::select(c("region","C3region","year","Value"))
df = new_data[order(new_data$region,new_data$Value)]
return(df)
}
df_gcapita = update(df_gcapita)
df_gcapita = df_gcapita |> dplyr::rename(region = `Region Name`,
C3region = `Region Alpha-3 Code`,
year = `End Year`)
View(df_gcapita)
df_gcapita = df_gcapita |> dplyr::select(c("region","C3region","year","Value"))
View(df_gcapita)
attach(df_gcapita)
df = df_gcapita[order(region,Value)]
View(df_gcapita)
trans = function(data){
library(tidyverse)
new_data <- data %>% pivot_wider(
names_from = "year",
values_from = "Value")
new_data  <- new_data %>% remove_rownames %>%
column_to_rownames(var="region")
return(new_data)
}
df_capita = trans(df_gcapita)
trans = function(data){
library(tidyverse)
new_data <- data %>% pivot_wider(
names_from = "year",
values_from = "Value")
new_data  <- new_data %>% remove_rownames %>%
column_to_rownames(var="region")
return(new_data)
}
df_gcapita = trans(df_gcapita)
df_gender = trans(df_gender)
View(df_gcapita)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = TRUE, eval = TRUE,
fig.align = "center", fig.height = 2, fig.width = 5)
library(readr)
df_gcapita <- read_csv("..//Donnees//annual-growth-in-gni-per-capita.csv")
head(df_gcapita)
df_gender <- read_csv("..//Donnees//gender-inequality-index.csv")
head(df_gender)
df_gpop <- read_csv("..//Donnees//population-growth-annual.csv")
head(df_gpop)
df_gcapita %>% summarise_all(funs(sum(is.na(.))))
df_gender %>% summarise_all(funs(sum(is.na(.))))
df_gpop %>% summarise_all(funs(sum(is.na(.))))
library(forcats)
fct_unique(df_gcapita[[1]])
## Fonction pour renommer les colonnes des bases et selec-
## tionner les colonnes dont nous avons besoin pour les tracés
update = function(data){
library(dplyr)
data = data |> dplyr::rename(region = `Region Name`,
C3region = `Region Alpha-3 Code`,
year = `End Year`)
data = data |> dplyr::select(c("region","C3region","year","Value"))
attach(data)
df = new_data[order(region,Value)]
return(df)
}
df_gcapita = update(df_gcapita)
View(df_gpop)
trans = function(data){
library(tidyverse)
new_data <- data %>% pivot_wider(
names_from = "year",
values_from = "Value")
new_data  <- new_data %>% remove_rownames %>%
column_to_rownames(var="region")
return(new_data)
}
df_gcapita = trans(df_gcapita)
View(df_gender)
## Fonction pour renommer les colonnes des bases et selec-
## tionner les colonnes dont nous avons besoin pour les tracés
update = function(data){
library(dplyr)
data = data |> dplyr::rename(region = `Region Name`,
C3region = `Region Alpha-3 Code`,
year = `End Year`)
data = data |> dplyr::select(c("region","C3region","year","Value"))
attach(data)
df = new_data[order(region,Value)]
return(df)
}
df_gcapita = update(df_gcapita)
## Fonction pour renommer les colonnes des bases et selec-
## tionner les colonnes dont nous avons besoin pour les tracés
update = function(data){
library(dplyr)
data = data |> dplyr::rename(region = `Region Name`,
C3region = `Region Alpha-3 Code`,
year = `End Year`)
data = data |> dplyr::select(c("region","C3region","year","Value"))
attach(data)
df = data[order(region,Value)]
return(df)
}
df_gcapita = update(df_gcapita)
View(df_gcapita)
